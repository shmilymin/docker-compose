# 接受来自外部的连接
bind 0.0.0.0

# 哨兵的端口号
# 因为各个哨兵节点会运行在单独的Docker容器中
# 所以无需担心端口重复使用
port 26379

# 配置哨兵的监控参数
# 格式：sentinel monitor <master-name> <ip> <redis-port> <quorum>
# master-name是为这个被监控的master起的名字
# ip是被监控的master的IP或主机名。因为Docker容器之间可以使用容器名访问，所以这里写master节点的容器名
# redis-port是被监控节点所监听的端口号
# quorom设定了当几个哨兵判定这个节点失效后，才认为这个节点真的失效了
sentinel myid dc0a3c0f48a016608f163354780a8afd189fb660

# 连接主节点的密码
# 格式：sentinel auth-pass <master-name> <password>
sentinel deny-scripts-reconfig yes
# Generated by CONFIG REWRITE
dir "/data"
sentinel monitor local-master 172.24.0.2 6379 2
sentinel auth-pass local-master redis
sentinel config-epoch local-master 0
sentinel leader-epoch local-master 0
sentinel known-replica local-master 172.24.0.3 6380
sentinel known-replica local-master 172.24.0.4 6380
sentinel known-replica local-master 172.24.0.4 6381
sentinel known-replica local-master 172.24.0.3 6381

sentinel current-epoch 0
